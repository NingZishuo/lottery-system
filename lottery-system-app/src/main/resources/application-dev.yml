server:
  port: 8091
  tomcat:
    threads:
      max: 200 #最大线程数
      min-spare: 10 #初始化线程数
    accept-count: 100 #等待队列长度,超出直接连接超时

#应用配置
app:
  config:
    #版本号
    api-version: v1
    #跨域,开发阶段可以设置为 * 不限制
    cross-origin: "*"

#Spring配置: rabbitmq
spring:
  datasource:
    driver-class-name: org.apache.shardingsphere.driver.ShardingSphereDriver
    url: jdbc:shardingsphere:classpath:sharding/sharding-jdbc-dev.yaml

  rabbitmq:
    addresses: 127.0.0.1
    port: 5672
    username: admin
    password: admin
    listener:
      simple:
        #每次投递1个给rabbitListener 消费完再次投递1个
        prefetch: 1
    queue-name:
      activity_sku_stock_zero: "activity_sku_stock_zero"
      send_award: "send_award"
      send_rebate: "send_rebate"
      credit_adjust_success: "credit_adjust_success"


# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy



mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  #config-location: classpath:/mybatis/config/mybatis-config.xml
  type-aliases-package: com.lottery.infrastructure.persistent.po
  configuration:
    #开启驼峰命名
    map-underscore-to-camel-case: true



# Redis
redis:
  sdk:
    config:
      host: 127.0.0.1
      port: 6379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true


# 日志
logging:
  level:
    root: info
    com.lottery.infrastructure.persistent.dao: debug
  config: classpath:logback-spring.xml
